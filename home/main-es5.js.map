{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/AngularMaterial.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/shared/Models/user-model.ts","webpack:///src/app/shared/Services/auth.service.ts","webpack:///src/app/shared/auth/auth-routing.module.ts","webpack:///src/app/shared/auth/auth.guard.ts","webpack:///src/app/shared/auth/auth.module.ts","webpack:///src/app/shared/auth/login/login.component.ts","webpack:///src/app/shared/auth/login/login.component.html","webpack:///src/app/shared/auth/register/register.component.ts","webpack:///src/app/shared/auth/register/register.component.html","webpack:///src/app/shared/header/header.component.ts","webpack:///src/app/shared/header/header.component.html","webpack:///src/app/shared/main-page/main-page.component.ts","webpack:///src/app/shared/main-page/main-page.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AngularMaterialModule","routes","path","component","redirectTo","AppRoutingModule","forRoot","AppComponent","title","AppModule","UserModel","AuthService","http","router","API_URL","URL","user","post","pipe","console","log","res","token","userId","expiresIn","expiresInDuration","now","Date","setAuthTimer","expirationDate","getTime","saveAuth","localStorage","getItem","clearTimeout","tokenTimer","navigate","clearAuthData","expiration","setItem","toISOString","removeItem","timer","setTimeout","logout","AuthRoutingModule","forChild","AuthGuard","authService","route","state","isAuth","loggedIn","AuthModule","LoginComponent","userModel","login","subscribe","onLogin","RegisterComponent","register","onRegister","HeaderComponent","MainPageComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\n\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  exports: [\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule\r\n  ]\r\n})\r\nexport class AngularMaterialModule {}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuard } from './shared/auth/auth.guard';\nimport { MainPageComponent } from './shared/main-page/main-page.component';\n\nconst routes: Routes = [\n  { path: '', component: MainPageComponent},\n  { path: '**', redirectTo: ''}\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'nosso-tempero';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { AuthModule } from './shared/auth/auth.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AngularMaterialModule } from './AngularMaterial.module';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { LoginComponent } from './shared/auth/login/login.component';\nimport { MainPageComponent } from './shared/main-page/main-page.component';\nimport { RegisterComponent } from './shared/auth/register/register.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainPageComponent,\n    HeaderComponent,\n  ],\n  imports: [\n    AuthModule,\n    AngularMaterialModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class UserModel {\r\n  _id: string\r\n  username: string\r\n  email: string\r\n  password: string\r\n}\r\n","import { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { Observable } from 'rxjs'\r\nimport { map, tap } from 'rxjs/operators'\r\n\r\nimport { UserModel } from './../Models/user-model'\r\nimport { environment } from '../../../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private readonly API_URL: string = environment.URL + '/user'\r\n\r\n  token: string\r\n  userId: string\r\n  tokenTimer: any\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  /**\r\n   * To register a new user\r\n   *\r\n   * @param user - Is the user data\r\n   * @returns The register of the user\r\n   */\r\n  register(user: UserModel): Observable<any> {\r\n    return this.http.post<any>(`${this.API_URL}/register`, user).pipe(\r\n      tap(() => console.log('User registrado'))\r\n    )\r\n  }\r\n\r\n  /**\r\n   * To loggin the user\r\n   *\r\n   * @param user - Is the user data\r\n   * @returns The user data with time to expire session and the id\r\n   */\r\n  login(user: UserModel): Observable<any> {\r\n    return this.http.post<any>(`${this.API_URL}/login`, user).pipe(\r\n      map(res => {\r\n        console.log(res.token)\r\n        console.log(res.userId)\r\n        console.log(res.expiresIn)\r\n        this.token = res.token\r\n        this.userId = res.userId\r\n        const expiresInDuration = res.expiresIn\r\n        const now = new Date()\r\n        this.setAuthTimer(expiresInDuration)\r\n        const expirationDate = new Date(now.getTime() + expiresInDuration * 1000)\r\n        this.saveAuth(this.token, this.userId, expirationDate)\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Verify if there's a token on the localStorage\r\n   *\r\n   * @returns Boolean if there's a token on the localStorage\r\n   */\r\n  loggedIn(): boolean {\r\n    return !!localStorage.getItem('token')\r\n  }\r\n\r\n  /**\r\n   * To get the token on the localStorage\r\n   *\r\n   * @returns The token on the localStorage\r\n   */\r\n  getToken(): string {\r\n    return localStorage.getItem('token')\r\n  }\r\n\r\n  /**\r\n   * To finish the user's session\r\n   */\r\n  logout() : void {\r\n    clearTimeout(this.tokenTimer)\r\n    this.router.navigate(['/auth/login'])\r\n    this.clearAuthData()\r\n  }\r\n\r\n  /**\r\n   * To save user data on localStorage\r\n   *\r\n   * @param token - Is the token of the user\r\n   * @param userId - Is the user id\r\n   * @param expiration - Is the time to close the session\r\n   */\r\n  saveAuth(token: string, userId: string, expiration: Date): void {\r\n    localStorage.setItem('token', this.token)\r\n    localStorage.setItem('userId', this.userId)\r\n    localStorage.setItem('expiration', expiration.toISOString())\r\n  }\r\n\r\n  /**\r\n   * To clear the localStorage\r\n   */\r\n  clearAuthData(): void {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('expiration')\r\n  }\r\n\r\n  /**\r\n   * To set the session duration\r\n   *\r\n   * @param timer - Is the time number of the counter\r\n   */\r\n  setAuthTimer(timer: number): void {\r\n    this.tokenTimer = setTimeout(() => {\r\n      this.logout()\r\n    }, timer * 1000)\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'auth/login', component: LoginComponent },\r\n  { path: 'auth/register', component: RegisterComponent },\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { AuthService } from './../Services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\r\n    const isAuth = this.authService.loggedIn()\r\n    if(!isAuth) {\r\n      this.router.navigate(['/auth/login'])\r\n      return false\r\n    }\r\n    return isAuth\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { AngularMaterialModule } from './../../AngularMaterial.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, RegisterComponent],\r\n  imports: [CommonModule, AngularMaterialModule, FormsModule, AuthRoutingModule]\r\n})\r\nexport class AuthModule {}\r\n","import { Component } from '@angular/core'\nimport { Router } from '@angular/router'\n\nimport { AuthService } from './../../Services/auth.service'\nimport { UserModel } from '../../Models/user-model'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['../auth.component.scss']\n})\nexport class LoginComponent {\n\n  userModel: UserModel = new UserModel()\n\n  constructor(private authService: AuthService, private router: Router) {\n  }\n  onLogin(): void {\n    this.authService.login(this.userModel).subscribe(() => {\n      this.router.navigate(['/'])\n    })\n  }\n}\n","<section class=\"auth-section\">\n  <button class=\"button-back\" [routerLink]=\"['/']\"><i class=\"fas fa-long-arrow-alt-left\"></i></button>\n  <article class=\"form\">\n    <form (ngSubmit)=\"onLogin()\">\n      <h2>Login</h2>\n      <mat-form-field>\n        <mat-label>Email</mat-label>\n        <input\n          class=\"bringForm\"\n          matInput type=\"email\"\n          name=\"email\"\n          [(ngModel)]=\"userModel.email\"\n          #emailInput=\"ngModel\">\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Senha</mat-label>\n        <input\n          class=\"bringForm\"\n          matInput type=\"password\"\n          name=\"password\"\n          [(ngModel)]=\"userModel.password\"\n          #passwordInput=\"ngModel\">\n      </mat-form-field>\n      <button type=\"submit\" mat-button>Entrar</button>\n      <br>\n      <div class=\"rota\">\n        <a [routerLink]=\"['/register']\">Ainda não possui conta?</a>\n      </div>\n    </form>\n  </article>\n</section>\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { UserModel } from './../../Models/user-model';\nimport { AuthService } from './../../Services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['../auth.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  userModel: UserModel = new UserModel()\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onRegister(): void {\n    console.log(this.userModel)\n    this.authService.register(this.userModel).subscribe(() => {\n      this.router.navigate(['/'])\n    })\n  }\n}\n","<section class=\"auth-section\">\n  <button class=\"button-back\" [routerLink]=\"['/']\"><i class=\"fas fa-long-arrow-alt-left\"></i></button>\n  <article class=\"form\">\n    <form (ngSubmit)=\"onRegister()\">\n      <h2>Cadastro</h2>\n      <mat-form-field>\n        <mat-label>Usuário</mat-label>\n        <input\n          class=\"bringForm\"\n          name=\"username\"\n          matInput type=\"text\"\n          [(ngModel)]=\"userModel.username\"\n          #userInput=\"ngModel\">\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Email</mat-label>\n        <input\n          class=\"bringForm\"\n          name=\"email\"\n          matInput type=\"email\"\n          [(ngModel)]=\"userModel.email\"\n          #emailInput=\"ngModel\">\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Senha</mat-label>\n        <input\n          class=\"bringForm\"\n          name=\"password\"\n          matInput type=\"password\"\n          [(ngModel)]=\"userModel.password\"\n          #passwordInput=\"ngModel\">\n      </mat-form-field>\n      <button type=\"submit\" mat-button>Cadastrar</button>\n      <br>\n      <div class=\"rota\">\n        <a [routerLink]=\"['/login']\">Já possui conta?</a>\n      </div>\n    </form>\n  </article>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from './../Services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section>\n  <div class=\"header-text\">\n    <h1>Nosso Tempero</h1>\n  </div>\n  <nav>\n    <ul class=\"d-flex\">\n      <li class=\"p-2\">\n        <a href=\"\">Ofertas do Dia</a>\n      </li>\n      <li class=\"direita p-2\">\n        <a href=\"\">Os Mais Pedidos</a>\n      </li>\n      <li>\n        <h1 [routerLink]=\"['/']\">Nossa Marca</h1>\n      </li>\n      <li class=\"esquerda p-2\">\n        <a href=\"\">Fale Conosco</a>\n      </li>\n      <li class=\"p-2\">\n        <a href=\"\">Cardápio</a>\n      </li>\n    </ul>\n  </nav>\n  <div class=\"user-section\">\n    <ul class=\"d-flex justify-content-end\">\n      <li class=\"p-2\">\n        <p>Olá, Usuário <i class=\"fas fa-user-circle\"></i></p>\n      </li>\n      <li class=\"p-2\">\n        <a [routerLink]=\"['/register']\"><u>Register</u></a>\n      </li>\n      <li class=\"p-2\">\n        <a [routerLink]=\"['/login']\"><u>Login</u></a>\n      </li>\n      <li class=\"p-2\">\n        <a href=\"\"><u>Logout</u></a>\n      </li>\n    </ul>\n  </div>\n  <div class=\"menu-mobile\">\n    <mat-menu #appMenu=\"matMenu\">\n      <div class=\"buttons-mobile\">\n        <button mat-menu-item>Ofertas do Dia</button>\n        <button mat-menu-item>Os Mais Pedidos</button>\n        <button mat-menu-item>Fale Conosco</button>\n        <button mat-menu-item>Cardápio</button>\n        <button mat-menu-item [routerLink]=\"['/register']\">Register</button>\n        <button mat-menu-item [routerLink]=\"['/login']\">Login</button>\n        <button mat-menu-item>Logout</button>\n      </div>\n    </mat-menu>\n    <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n      <i class=\"fas fa-bars fa-lg\"></i>\n    </button>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.scss']\n})\nexport class MainPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section>\n  <h3>Nossa Marca</h3>\n  <h2>Ofertas Especiais</h2>\n  <button mat-button class=\"order\">Fazer Pedido</button>\n  <button class=\"scroll\"><i class=\"fas fa-long-arrow-alt-down\"></i></button>\n</section>\n","export const environment = {\r\n  production: false,\r\n  URL: ''\r\n};\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}