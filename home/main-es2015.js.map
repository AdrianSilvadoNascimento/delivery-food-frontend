{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/AngularMaterial.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/Models/user-model.ts","./src/app/shared/Services/auth.service.ts","./src/app/shared/Services/spinner/spinner-interceptor.service.ts","./src/app/shared/Services/spinner/spinner.service.ts","./src/app/shared/auth/auth-interceptor.ts","./src/app/shared/auth/auth-routing.module.ts","./src/app/shared/auth/auth.guard.ts","./src/app/shared/auth/auth.module.ts","./src/app/shared/auth/login/login.component.ts","./src/app/shared/auth/login/login.component.html","./src/app/shared/auth/register/register.component.ts","./src/app/shared/auth/register/register.component.html","./src/app/shared/header/header.component.ts","./src/app/shared/header/header.component.html","./src/app/shared/main-page/main-page.component.ts","./src/app/shared/main-page/main-page.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\"\r\n\r\nimport { MatMenuModule } from '@angular/material/menu'\r\nimport { MatInputModule } from '@angular/material/input'\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { MatFormFieldModule } from '@angular/material/form-field'\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar'\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'\r\n\r\n@NgModule({\r\n  imports: [],\r\n  exports: [\r\n    MatMenuModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule\r\n  ]\r\n})\r\nexport class AngularMaterialModule {}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuard } from './shared/auth/auth.guard';\nimport { MainPageComponent } from './shared/main-page/main-page.component';\n\nconst routes: Routes = [\n  { path: '', component: MainPageComponent},\n  { path: '**', redirectTo: ''}\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'nosso-tempero';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core'\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\r\n\r\nimport { ToastrModule } from 'ngx-toastr'\r\n\r\nimport { AppComponent } from './app.component'\r\nimport { AuthInterceptor } from './shared/auth/auth-interceptor'\r\nimport { AuthModule } from './shared/auth/auth.module'\r\nimport { AngularMaterialModule } from './AngularMaterial.module'\r\nimport { AppRoutingModule } from './app-routing.module'\r\nimport { HeaderComponent } from './shared/header/header.component'\r\nimport { MainPageComponent } from './shared/main-page/main-page.component'\r\nimport { SpinnerInterceptorService } from './shared/Services/spinner/spinner-interceptor.service'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainPageComponent,\r\n    HeaderComponent,\r\n  ],\r\n  imports: [\r\n    AuthModule,\r\n    AngularMaterialModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ToastrModule.forRoot ({\r\n      timeOut: 2000,\r\n      progressBar: true,\r\n      preventDuplicates: true,\r\n    }),\r\n    ReactiveFormsModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: SpinnerInterceptorService, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export class UserModel {\r\n  _id: string\r\n  username: string\r\n  email: string\r\n  password: string\r\n}\r\n","import { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core'\r\nimport { Observable } from 'rxjs'\r\nimport { map, tap } from 'rxjs/operators'\r\n\r\nimport { UserModel } from './../Models/user-model'\r\nimport { environment } from '../../../environments/environment'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private readonly API_URL: string = environment.URL + '/user'\r\n\r\n  token: string\r\n  userId: string\r\n  tokenTimer: any\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  /**\r\n   * To register a new user\r\n   *\r\n   * @param user - Is the user data\r\n   * @returns The register of the user\r\n   */\r\n  register(user: UserModel): Observable<any> {\r\n    return this.http.post<any>(`${this.API_URL}/register`, user)\r\n  }\r\n\r\n  /**\r\n   * To loggin the user\r\n   *\r\n   * @param user - Is the user data\r\n   * @returns The user data with time to expire session and the id\r\n   */\r\n  login(user: UserModel): Observable<any> {\r\n    return this.http.post<any>(`${this.API_URL}/login`, user).pipe(\r\n      map(res => {\r\n        console.log(res)\r\n        this.token = res.token\r\n        this.userId = res.userId\r\n        const expiresInDuration = res.expiresIn\r\n        const now = new Date()\r\n        this.setAuthTimer(expiresInDuration)\r\n        const expirationDate = new Date(now.getTime() + expiresInDuration * 1000)\r\n        this.saveAuth(this.token, this.userId, expirationDate)\r\n      })\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Verify if there's a token on the localStorage\r\n   *\r\n   * @returns Boolean if there's a token on the localStorage\r\n   */\r\n  loggedIn(): boolean {\r\n    return !!localStorage.getItem('token')\r\n  }\r\n\r\n  /**\r\n   * To get the token on the localStorage\r\n   *\r\n   * @returns The token on the localStorage\r\n   */\r\n  getToken(): string {\r\n    return localStorage.getItem('token')\r\n  }\r\n\r\n  /**\r\n   * To finish the user's session\r\n   */\r\n  logout() : void {\r\n    clearTimeout(this.tokenTimer)\r\n    this.router.navigate(['/'])\r\n    this.clearAuthData()\r\n  }\r\n\r\n  /**\r\n   * To save user data on localStorage\r\n   *\r\n   * @param token - Is the token of the user\r\n   * @param userId - Is the user id\r\n   * @param expiration - Is the time to close the session\r\n   */\r\n  saveAuth(token: string, userId: string, expiration: Date): void {\r\n    localStorage.setItem('token', this.token)\r\n    localStorage.setItem('userId', this.userId)\r\n    localStorage.setItem('expiration', expiration.toISOString())\r\n  }\r\n\r\n  /**\r\n   * To clear the localStorage\r\n   */\r\n  clearAuthData(): void {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('expiration')\r\n  }\r\n\r\n  /**\r\n   * To set the session duration\r\n   *\r\n   * @param timer - Is the time number of the counter\r\n   */\r\n  setAuthTimer(timer: number): void {\r\n    this.tokenTimer = setTimeout(() => {\r\n      this.logout()\r\n    }, timer * 1000)\r\n  }\r\n}\r\n","import { HttpEvent, HttpRequest, HttpHandler, HttpInterceptor } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators'\n\nimport { SpinnerService } from './spinner.service';\n\n@Injectable()\nexport class SpinnerInterceptorService implements HttpInterceptor {\n  constructor(public spinnerService: SpinnerService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.spinnerService.isLoading.next(true)\n    return next.handle(req).pipe(\n      finalize(() => {\n        this.spinnerService.isLoading.next(false)\n      })\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class SpinnerService {\n  public isLoading: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false)\n}\n","import { HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\"\r\nimport { Injectable } from \"@angular/core\"\r\n\r\nimport { AuthService } from \"../Services/auth.service\"\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const authToken = this.authService.getToken()\r\n    const authRequest = req.clone({\r\n      headers: req.headers.set('X-bearer-authorization', 'Bearer ' + authToken),\r\n    })\r\n    return next.handle(authRequest)\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'auth/login', component: LoginComponent },\r\n  { path: 'auth/register', component: RegisterComponent },\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { AuthService } from './../Services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\r\n    const isAuth = this.authService.loggedIn()\r\n    if(!isAuth) {\r\n      this.router.navigate(['/auth/login'])\r\n      return false\r\n    }\r\n    return isAuth\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { AngularMaterialModule } from './../../AngularMaterial.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, RegisterComponent],\r\n  imports: [CommonModule, AngularMaterialModule, FormsModule, AuthRoutingModule]\r\n})\r\nexport class AuthModule {}\r\n","import { Component } from '@angular/core'\nimport { Router } from '@angular/router'\n\nimport { AuthService } from './../../Services/auth.service'\nimport { UserModel } from '../../Models/user-model'\nimport { ToastrService } from 'ngx-toastr'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['../auth.component.scss']\n})\nexport class LoginComponent {\n\n  userModel: UserModel = new UserModel()\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private toastr: ToastrService) {\n  }\n  onLogin(): void {\n    this.authService.login(this.userModel).subscribe(() => {\n      this.toastr.success('You loggeding successfuly', 'Success')\n      setTimeout(() => {\n        this.router.navigate(['/'])\n      }, 1000)\n    }, () => {\n      this.toastr.error('Somenthing went wrong :(', 'Fail')\n    })\n  }\n}\n","<section class=\"auth-section\">\n  <button class=\"button-back\" [routerLink]=\"['/']\"><i class=\"fas fa-long-arrow-alt-left\"></i></button>\n  <article class=\"form\">\n    <form (ngSubmit)=\"onLogin()\">\n      <h2>Login</h2>\n      <mat-form-field>\n        <mat-label>Email</mat-label>\n        <input\n          class=\"bringForm\"\n          matInput type=\"email\"\n          name=\"email\"\n          [(ngModel)]=\"userModel.email\"\n          #emailInput=\"ngModel\">\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Senha</mat-label>\n        <input\n          class=\"bringForm\"\n          matInput type=\"password\"\n          name=\"password\"\n          [(ngModel)]=\"userModel.password\"\n          #passwordInput=\"ngModel\">\n      </mat-form-field>\n      <button type=\"submit\" mat-button>Entrar</button>\n      <br>\n      <div class=\"rota\">\n        <a [routerLink]=\"['/auth/register']\">Ainda não possui conta?</a>\n      </div>\n    </form>\n  </article>\n</section>\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { UserModel } from './../../Models/user-model';\nimport { AuthService } from './../../Services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['../auth.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  userModel: UserModel = new UserModel()\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private toastr: ToastrService\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n  onRegister(): void {\n    console.log(this.userModel)\n    this.authService.register(this.userModel).subscribe(() => {\n      this.toastr.success('Registered successfuly', 'Success')\n      setTimeout(() => {\n        this.router.navigate(['/'])\n      }, 1000)\n    }, () => {\n      this.toastr.error('Somenthing went wrong :(', 'Fail')\n    })\n  }\n}\n","<section class=\"auth-section\">\n  <button class=\"button-back\" [routerLink]=\"['/']\"><i class=\"fas fa-long-arrow-alt-left\"></i></button>\n  <article class=\"form\">\n    <form (ngSubmit)=\"onRegister()\">\n      <h2>Cadastro</h2>\n      <mat-form-field>\n        <mat-label>Seu Nome</mat-label>\n        <input\n          class=\"bringForm\"\n          name=\"username\"\n          matInput type=\"text\"\n          [(ngModel)]=\"userModel.username\"\n          #userInput=\"ngModel\">\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Email</mat-label>\n        <input\n          class=\"bringForm\"\n          name=\"email\"\n          matInput type=\"email\"\n          [(ngModel)]=\"userModel.email\"\n          #emailInput=\"ngModel\">\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Senha</mat-label>\n        <input\n          class=\"bringForm\"\n          name=\"password\"\n          matInput type=\"password\"\n          [(ngModel)]=\"userModel.password\"\n          #passwordInput=\"ngModel\">\n      </mat-form-field>\n      <button type=\"submit\" mat-button>Cadastrar</button>\n      <br>\n      <div class=\"rota\">\n        <a [routerLink]=\"['/auth/login']\">Já possui conta?</a>\n      </div>\n    </form>\n  </article>\n</section>\n","import { Component } from '@angular/core';\n\nimport { AuthService } from './../Services/auth.service';\nimport { SpinnerService } from './../Services/spinner/spinner.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n\n  constructor(public authService: AuthService, public loader: SpinnerService) { }\n\n  onLogout(): void {\n    this.authService.logout()\n  }\n}\n","<section>\n  <div class=\"header-text\">\n    <h1>Nosso Tempero</h1>\n  </div>\n  <nav>\n    <ul class=\"d-flex\">\n      <li class=\"p-2\">\n        <a href=\"\">Ofertas do Dia</a>\n      </li>\n      <li class=\"direita p-2\">\n        <a href=\"\">Os Mais Pedidos</a>\n      </li>\n      <li>\n        <h1 [routerLink]=\"['/']\">Nossa Marca</h1>\n      </li>\n      <li class=\"esquerda p-2\">\n        <a href=\"\">Fale Conosco</a>\n      </li>\n      <li class=\"p-2\">\n        <a href=\"\">Cardápio</a>\n      </li>\n    </ul>\n  </nav>\n  <div class=\"user-section\">\n    <ul class=\"d-flex justify-content-end\">\n      <li class=\"p-2\">\n        <p>Olá, Usuário <i class=\"fas fa-user-circle\"></i></p>\n      </li>\n      <li class=\"p-2\">\n        <a [routerLink]=\"['/auth/register']\"><u>Register</u></a>\n      </li>\n      <li class=\"p-2\">\n        <a [routerLink]=\"['/auth/login']\"><u>Login</u></a>\n      </li>\n      <li class=\"p-2\">\n        <a href=\"\"><u>Logout</u></a>\n      </li>\n    </ul>\n  </div>\n  <div class=\"menu-mobile\">\n    <mat-menu #appMenu=\"matMenu\">\n      <div class=\"buttons-mobile\">\n        <button mat-menu-item>Ofertas do Dia</button>\n        <button mat-menu-item>Os Mais Pedidos</button>\n        <button mat-menu-item>Fale Conosco</button>\n        <button mat-menu-item>Cardápio</button>\n        <button mat-menu-item [routerLink]=\"['/auth/register']\">Register</button>\n        <button mat-menu-item [routerLink]=\"['/auth/login']\">Login</button>\n        <button mat-menu-item (click)=\"onLogout()\">Logout</button>\n      </div>\n    </mat-menu>\n    <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\n      <i class=\"fas fa-bars fa-lg\"></i>\n    </button>\n  </div>\n</section>\n<div *ngIf=\"loader.isLoading | async\" class=\"loader-container\">\n  <mat-spinner color=\"warn\"></mat-spinner>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.scss']\n})\nexport class MainPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section>\n  <h3>Nossa Marca</h3>\n  <h2>Ofertas Especiais</h2>\n  <button mat-button class=\"order\">Fazer Pedido</button>\n  <button class=\"scroll\"><i class=\"fas fa-long-arrow-alt-down\"></i></button>\n</section>\n","export const environment = {\r\n  production: false,\r\n  URL: 'http://localhost:3000'\r\n};\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}